@InProceedings{Laufer_EduHPC_2022,
  abbr = {TCPP},
  author = {Läufer, Konstantin and Thiruvathukal, George K.},
  author+an = {1=myself},
  title = 	 {UnoAPI: Balancing Performance, Portability, and Productivity (P3) in HPC Education},
  booktitle = {Proceedings of the Workshop on Education for High-Performance Computing (EduHPC-22)},
  year = 	 2022,
  month = 	 nov,
  address = 	 {Dallas, TX, USA},
  note = 	 {held in conjunction with SC22},
  url =          {https://ecommons.luc.edu/cs_facpubs/314/},
  website =      {https://unoapi.org},
  code =         {https://github.com/LoyolaChicagoCode/unoapi-dpcpp-examples},
  pdf =          {https://figshare.com/ndownloader/files/37586422},
  slides =       {https://figshare.com/ndownloader/files/38208480},
  abstract =     {Abstract—oneAPI is a major initiative by Intel aimed at making it easier to program heterogeneous architectures used in high-performance computing using a unified application programming interface (API). While raising the abstraction level via a unified API represents a promising step for the current generation of students and practitioners to embrace highperformance computing, we argue that a curriculum of welldeveloped software engineering methods and well-crafted exemplars will be necessary to ensure interest by this audience and those who teach them. We aim to bridge the gap by developing a curriculum—codenamed UnoAPI—that takes a more holistic approach by looking beyond language and framework to include the broader development ecosystem, similar to the experience found in popular HPC languages such as Python. We hope to make parallel programming a more attractive option by making it look more like general application development in modern languages being used by most students and educators today. Our curriculum emanates from the perspective of well-crafted exemplars from the foundations of computer systems—given that most HPC architectures of interest begin from the systems tradition—with an integrated treatment of essential principles of distributed systems, programming languages, and software engineering. We argue that a curriculum should cover the essence of these topics to attract students to HPC and enable them to confidently solve computational problems using oneAPI. By the time of this submission, we have shared our materials with a small group of undergraduate sophomores, and their responses have been encouraging in terms of self-reported comprehension and ability to reproduce the compilation and execution of exemplars on their personal systems. We plan a follow-up study with a larger cohort by incorporating some of our materials in our existing course on High-Performance Computing.},
  bibtex_show=1,
  selected = {true}
}

